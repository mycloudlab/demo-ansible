---
- name: pet-clinic build
  hosts: localhost
  connection: local 
  vars_files:
    - vars.yml

  tasks:
     
 #   - name: Clone do projeto
 #     git:
 #       repo: https://github.com/mycloudlab/pet-clinic-demo-aap
 #       dest: src
 #       single_branch: yes
 #       version: main
 
#    - name: obtem a versão da aplicação
#      shell: cd src && git rev-parse --short HEAD
#      register: version

#    - name: muda a versão para o commit hash 
#      shell: mvn versions:set -DgenerateBackupPoms=false -DnewVersion={{version.stdout}}
#      args:
#        chdir: src

#    - name: compile
#      shell: mvn clean package deploy -DskipTests
#      args:
#        chdir: src

#    - name: Creates directory
#      file:
#        path: /home/runner/.ssh
#        state: directory

    - name: Creates directory
      shell: mkdir /home/runner/.ssh

    - name: Ensure GitHub deploy key is present on the server.
      copy:
        content: "{{ git_petclinic_infra_key }}\r"
        dest: /home/runner/.ssh/id_ed25519

    - name: Ensure GitHub deploy key is present on the server.
      copy:
        content: "{{ git_petclinic_infra_pub }}\r"
        dest: /home/runner/.ssh/id_ed25519.pub

    - name: user id
      shell: ls -la /home/runner/.ssh


    - name: set permission
      shell: cd /home/runner/.ssh && chmod 600 * -R

    

    - name: chave publica
      shell: cat /home/runner/.ssh/id_ed25519.pub


    - name: chave 
      shell: cat /home/runner/.ssh/id_ed25519

    
    
    - name: adicinona
      shell: echo -e "github.com,20.201.28.151 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=" > /home/runner/.ssh/known_hosts

    - name: Clone do projeto de infraestrutura
      shell: git clone git@github.com:mycloudlab/demo-ansible.git infra
    
   # podman run --rm -v ${HOME}/.ssh/id_ed25519.pub:/home/runner/.ssh/id_ed25519.pub -v ${HOME}/.ssh/id_ed25519:/home/runner/.ssh/id_ed25519 -it teste bash

    
    - name: seta a versão nova em desenvolvimento
      copy:
        content: "dev_version: {{ version.stdout }}"
        dest: infra/configs/dev/config.yml

    - name: commit new version
      shell: cd infra && git add . && git commit -a -m "update dev version" && git push

