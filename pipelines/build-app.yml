---
- name: pet-clinic build
  hosts: localhost
  connection: local 
  vars_files:
    - vars.yml

  tasks:
     
    - name: Clone do projeto
      git:
        repo: https://github.com/mycloudlab/pet-clinic-demo-aap
        dest: src
        single_branch: yes
        version: main
 
    - name: obtem a versão da aplicação
      shell: cd src && git rev-parse --short HEAD
      register: version

    - name: muda a versão para o commit hash 
      shell: mvn versions:set -DgenerateBackupPoms=false -DnewVersion={{version.stdout}}
      args:
        chdir: src

    - name: compile
      shell: mvn clean package deploy -DskipTests
      args:
        chdir: src

    - name: Creates directory
      file:
        path: /home/runner/.ssh
        state: directory

    - name: Ensure GitHub deploy key is present on the server.
      copy:
        content: "{{ git_petclinic_infra_key }}"
        dest: /home/runner/.ssh/id_ed25519
        mode: 600

    - name: Ensure GitHub deploy key is present on the server.
      copy:
        content: "{{ git_petclinic_infra_pub }}"
        dest: /home/runner/.ssh/id_ed25519.pub
        mode: 600

    - name: user id
      shell: id

    

    - name: chave publica
      shell: cat /home/runner/.ssh/id_ed25519.pub


    - name: chave 
      shell: cat /home/runner/.ssh/id_ed25519

    -
    - name: user id
      shell: ls -la /home/runner/.ssh

    - name: adicinona
      shell: echo -e "github.com,20.201.28.151 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=" > /home/runner/.ssh/known_hosts

    - name: Clone do projeto de infraestrutura
      shell: git clone git@github.com:mycloudlab/demo-ansible.git infra
    
   # podman run --rm -v ${HOME}/.ssh/id_ed25519.pub:/home/runner/.ssh/id_ed25519.pub -v ${HOME}/.ssh/id_ed25519:/home/runner/.ssh/id_ed25519 -it teste bash

    
    - name: seta a versão nova em desenvolvimento
      copy:
        content: "dev_version: {{ version.stdout }}"
        dest: infra/configs/dev/config.yml

    - name: commit new version
      shell: cd infra && git add . && git commit -a -m "update dev version" && git push


kind: Pod
apiVersion: v1
metadata:
  generateName: automation-job-893-
  annotations:
    openshift.io/scc: restricted
  name: demo2
  namespace: ansible-automation-platform
spec:
  restartPolicy: Never
  serviceAccountName: default
  imagePullSecrets:
    - name: default-dockercfg-xpvrq
  priority: 0
  schedulerName: default-scheduler
  enableServiceLinks: true
  terminationGracePeriodSeconds: 30
  preemptionPolicy: PreemptLowerPriority
  nodeName: ip-10-0-134-32.us-east-2.compute.internal
  securityContext:
    seLinuxOptions:
      level: 's0:c26,c5'
    fsGroup: 1000660000
  containers:
    - resources:
        requests:
          cpu: 250m
          memory: 100Mi
      stdin: true
      terminationMessagePath: /dev/termination-log
      stdinOnce: true
      name: worker
      securityContext:
        capabilities:
          drop:
            - KILL
            - MKNOD
            - SETGID
            - SETUID
        runAsUser: 1000660000
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: maven-storage
          mountPath: /maven/repository
      terminationMessagePolicy: File
      image: >-
        quay.io/rhn_support_csantana/ansible-executation-environment-java8-mvn-3:2.0
      args:
        - sleep
        - "80000"
  automountServiceAccountToken: false
  serviceAccount: default
  volumes:
    - name: maven-storage
      persistentVolumeClaim:
        claimName: ee-maven-repos
  